{"version":3,"sources":["Components/Test/Test.module.css","Components/Test/Question/Question.module.css","Components/Test/Question/Question.jsx","Components/Test/ProgressBar/ProgressBar.jsx","Components/Test/Test.jsx","Components/App/App.js","index.js"],"names":["module","exports","Question","item","onUserAnswer","className","styles","question","id","answerInput","onChange","e","userAnswer","target","value","type","ProgressBar","progress","step","style","width","data","answer","initialItems","reduce","acc","el","questionWidth","length","Test","React","useState","setStep","items","setItems","isPassed","setIsPassed","handleGetUserAnswer","defineCurrentItem","d","isAllQuestionsAnswer","Object","keys","every","allAnswersWidth","container","testWrapper","total","map","indx","currentItem","textPrefix","isRight","toLowerCase","right","wrong","idx","onClick","prevStep","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbe39588.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Test_container__PJar5\",\"testWrapper\":\"Test_testWrapper__Fb9n2\",\"total\":\"Test_total__3y5xD\",\"right\":\"Test_right__1bjVm\",\"wrong\":\"Test_wrong__1BiS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerInput\":\"Question_answerInput__2Vl_e\",\"question\":\"Question_question__D603n\"};","import React from \"react\";\r\nimport styles from \"./Question.module.css\";\r\n\r\nexport const Question = ({ item, onUserAnswer }) => {\r\n  const handleInputChange = e => {\r\n    onUserAnswer({ [item.id]: { ...item, userAnswer: e.target.value } });\r\n  };\r\n  return (\r\n    <div className={styles.question}>\r\n      Вопрос {item.id}: {item.question}\r\n      <div className={styles.answerInput}>\r\n        <input\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          value={item.userAnswer}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./ProgressBar.css\";\r\n\r\nexport const ProgressBar = ({ progress, step }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\r\n        <span className=\"label\">Вопрос {step + 1}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Question } from \"./Question/Question\";\r\nimport { ProgressBar } from \"./ProgressBar/ProgressBar\";\r\nimport styles from \"./Test.module.css\";\r\n\r\nconst data = [\r\n  { id: 1, question: \"Столица России?\", answer: \"Москва\", userAnswer: \"\" },\r\n  { id: 2, question: \"5+5?\", answer: \"10\", userAnswer: \"\" },\r\n  { id: 3, question: \"Столица Франции?\", answer: \"Париж\", userAnswer: \"\" },\r\n];\r\n\r\nconst initialItems = data.reduce((acc, el) => {\r\n  return { ...acc, [el.id]: el };\r\n}, {});\r\nconst questionWidth = 100 / data.length;\r\n\r\nexport const Test = () => {\r\n  const [step, setStep] = React.useState(0);\r\n  const [items, setItems] = React.useState(initialItems);\r\n  const [isPassed, setIsPassed] = React.useState(false);\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  const handleIncrease = () => setStep((prevStep) => prevStep + 1);\r\n  const handleDecrease = () => setStep((prevStep) => prevStep - 1);\r\n  const handlePassTest = () => setIsPassed(true);\r\n\r\n  const handleGetUserAnswer = (userAnswer) => {\r\n    setItems({ ...items, ...userAnswer });\r\n  };\r\n\r\n  const defineCurrentItem = (d) => {\r\n    return items[d.id];\r\n  };\r\n\r\n  const isAllQuestionsAnswer = Object.keys(items).every(\r\n    (item) => !!items[item].userAnswer\r\n  );\r\n\r\n  const allAnswersWidth = Object.keys(items).reduce((acc, item) => {\r\n    return items[item].userAnswer ? acc + questionWidth : acc;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.testWrapper}>\r\n        {!isPassed ? (\r\n          <>\r\n            <ProgressBar progress={allAnswersWidth} step={step} />\r\n            {data.map((d, idx) => (\r\n              <div key={idx}>\r\n                {idx === step && (\r\n                  <Question\r\n                    onUserAnswer={handleGetUserAnswer}\r\n                    item={defineCurrentItem(d)}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n            {!!step && <button onClick={handleDecrease}>Назад</button>}\r\n            {step !== data.length - 1 && (\r\n              <button onClick={handleIncrease}>Вперед</button>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className={styles.total}>\r\n            {data.map((d, indx) => {\r\n              const currentItem = defineCurrentItem(d);\r\n              const textPrefix = `Ваш ответ: ${currentItem.userAnswer}, `;\r\n              const isRight =\r\n                currentItem.answer.toLowerCase() ===\r\n                currentItem.userAnswer.toLowerCase();\r\n              return (\r\n                <div key={indx}>\r\n                  <div> {currentItem.question} </div>\r\n                  <div className={isRight ? styles.right : styles.wrong}>\r\n                    {textPrefix}\r\n                    {isRight\r\n                      ? \"правильно\"\r\n                      : `не правильно, правильный ответ ${currentItem.answer}`}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {isAllQuestionsAnswer && (\r\n          <button onClick={handlePassTest}>Проверить ответы</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport { Test } from \"../Test/Test\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Test />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}